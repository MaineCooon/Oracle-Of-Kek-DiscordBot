{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 The only file that will be necessary to edit is \'91wallet.py\'92 inside the src/core/ directory.  Inside of this are ten functions that need to be completed.  These functions are already hooked up through the bot commands and thus won\'92t require any other work outside the functions to reflect in the bot\'92s behavior.  This also means these functions must NOT be renamed and need to return exactly what is specified, in the format specified.\
\
The WalletDebug class exists solely for testing purposes, allowing commands to be tested using fake user balances existing only inside the program\'92s run.  It also implements its own dummy versions of most of the ten functions, which they currently hook through to keep things simple.  Once these functions are implemented the WalletDebug class will be completely unneeded and can be either deleted or commented out (I would recommend the latter in case it ever comes in use for debugging in the future).\
\
The functions -\
\
get_staking_weight()\
- Returns, as a string, the staking weight to display in the !blockchain command.\
\
get_staking_reward()\
- Returns, as a string, the staking reward to display in the !blockchain command\
\
get_blockchain_size()\
- Returns, as a string, the staking reward to display in the !blockchain command\
\
get_balance(user)\
- Argument \'91user\'92 is a discord User object\
- Returns, as a float/decimal, a user\'92s current KekBot balance\
- The commented out \'91address\'92 variable gets the user\'92s deposit address from the database table, so feel free to comment that back in and use that variable.  It will already be verified elsewhere that the provided user has a registered deposit address.\
\
create_deposit_address(user)\
- Argument \'91user\'92 is a discord User object\
- Returns, as a string, the deposit address\
- The commented out line \'93database.set_deposit_address(user, address)\'94 MUST be commented back in and used before the end of the function, with \'91address\'92 being the new deposit address\
\
get_withdrawals(address)\
- Argument \'91address\'92 is a deposit address of a user\'92s tipping account as a string\
- Returns a LIST of transaction IDs as strings\
- Gets recent withdrawal transaction IDs for the given address.  The list does not need to have any particular limit as the !withdrawals command will trim the list itself\
\
get_deposits(address)\
- Argument \'91address\'92 is a deposit address of a user\'92s tipping account as a string\
- Returns a LIST of transaction IDs as strings\
- Gets recent deposit transaction IDs for the given address.  The list does not need to have any particular limit as the !deposits command will trim the list itself\
\
make_transaction(sender_address, receiver_address, amount)\
- Argument \'91sender_address\'92 is a deposit address of the sender\'92s tipping account as a string\
- Argument \'91receiver_address\'92 is a deposit address of the receiver\'92s tipping account as a string\
- Argument \'91amount\'92 is the desired amount of KekCoin to send as a float\
- Doesn\'92t return anything\
- Already wrapped in a try/except block elsewhere so can be allowed to just throw an exception if it failed\
\
is_valid_address(address)\
- Argument \'91address\'92 is a supposed deposit address as a string\
- Used for arg-checking !withdraw commands, to make sure the deposit address they listed actually makes sense - for example, if they listed \'91abcdefg\'92 as a deposit address.\
- Returns True if the address is valid, otherwise returns False\
\
can_withdraw_amount(amount, address)\
- Argument \'91amount\'92 is a proposed withdrawal amount as a float\
- Argument \'91address\'92 is a deposit address as a string\
- Returns True if the given address is able to/has enough to withdraw the proposed amount, otherwise returns False}